import pygame
import random

# Initialize Pygame
pygame.init()

# Set up the display
WIDTH = 800
HEIGHT = 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Bike Game with Enemies")

# Colors
WHITE = (255, 255, 255)
RED = (255, 0, 0)
GREEN = (0, 255, 0)

# Bike properties
bike_x = WIDTH // 2
bike_y = HEIGHT - 60
bike_width = 40
bike_height = 20
bike_speed = 5

# Enemy properties
enemy_width = 30
enemy_height = 30
enemy_speed = 4
enemies = []

# Create multiple enemies
def create_enemy():
    x = random.randint(0, WIDTH - enemy_width)
    return {'x': x, 'y': -enemy_height}

# Initial enemies
for _ in range(5):  # 5 enemies to start
    enemies.append(create_enemy())

# Game variables
score = 0
clock = pygame.time.Clock()

# Game loop
running = True
while running:
    # Event handling
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Bike movement
    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and bike_x > 0:
        bike_x -= bike_speed
    if keys[pygame.K_RIGHT] and bike_x < WIDTH - bike_width:
        bike_x += bike_speed

    # Update enemies
    for enemy in enemies[:]:
        enemy['y'] += enemy_speed
        # Remove enemy if off screen and add new one
        if enemy['y'] > HEIGHT:
            enemies.remove(enemy)
            enemies.append(create_enemy())
            score += 1

    # Collision detection
    bike_rect = pygame.Rect(bike_x, bike_y, bike_width, bike_height)
    for enemy in enemies:
        enemy_rect = pygame.Rect(enemy['x'], enemy['y'], enemy_width, enemy_height)
        if bike_rect.colliderect(enemy_rect):
            running = False

    # Draw everything
    screen.fill(WHITE)
    
    # Draw bike
    pygame.draw.rect(screen, GREEN, (bike_x, bike_y, bike_width, bike_height))
    
    # Draw enemies
    for enemy in enemies:
        pygame.draw.rect(screen, RED, (enemy['x'], enemy['y'], enemy_width, enemy_height))

    # Draw score
    font = pygame.font.Font(None, 36)
    score_text = font.render(f"Score: {score}", True, (0, 0, 0))
    screen.blit(score_text, (10, 10))

    # Update display
    pygame.display.flip()
    clock.tick(60)

# Game over
print(f"Game Over! Final Score: {score}")
pygame.quit()
